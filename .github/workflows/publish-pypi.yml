name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  pypi-publish:
    name: Publish release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/clickhouse-mcp-agent
    permissions:
      id-token: write  # Required for trusted publishing to PyPI
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install UV package manager
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Verify package version matches release tag
      run: |
        PACKAGE_VERSION=$(uv run python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
        RELEASE_TAG=${GITHUB_REF#refs/tags/}
        echo "Package version: $PACKAGE_VERSION"
        echo "Release tag: $RELEASE_TAG"
        if [ "v$PACKAGE_VERSION" != "$RELEASE_TAG" ]; then
          echo "❌ Version mismatch! Package version (v$PACKAGE_VERSION) doesn't match release tag ($RELEASE_TAG)"
          exit 1
        fi
        echo "✅ Version check passed"
    
    - name: Install package with dev dependencies
      run: |
        uv pip install --system -e ".[dev]"
    
    - name: Run tests before publishing
      run: |
        python -m pytest tests/ -v
    
    - name: Lint code before publishing
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv,__pycache__,.git
    
    - name: Build package with UV
      run: |
        uv build
        ls -la dist/
    
    - name: Verify package contents
      run: |
        # Check that wheel contains expected files
        python -m zipfile -l dist/*.whl | grep -E "(agent/|pyproject.toml|README.md)"
        echo "✅ Package contents verified"
    
    - name: Test package installation from wheel
      run: |
        # Create a fresh environment to test the wheel
        python -m venv test_env
        source test_env/bin/activate
        pip install dist/*.whl
        python -c "from agent import query_clickhouse, ClickHouseConfig; print('✅ Package imports successfully')"
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        verbose: true

  post-publish:
    name: Post-publish verification
    runs-on: ubuntu-latest
    needs: pypi-publish
    if: success()
    
    steps:
    - name: Wait for PyPI propagation
      run: sleep 30
    
    - name: Test PyPI installation
      run: |
        pip install clickhouse-mcp-agent
        python -c "from agent import query_clickhouse; print('✅ PyPI package works!')"
      continue-on-error: true  # Sometimes PyPI takes time to propagate
